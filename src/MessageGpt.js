import React, { useState } from 'react';
import './MessageGPT.css'; 
import OpenAI from "openai";

function MessageGPT({ toggleOverlay, promptText }) {
    const [prompt, setPrompt] = useState('');
    const [includeText, setIncludeText] = useState(false);
    const [additionalText, setAdditionalText] = useState('');
    const [response, setResponse] = useState('');

    //Chatgpt
    const firstKey = "sk";
    const secondKey = "MdrbvbTMU5dLDZwZZZrNT3";
    const thirdKey = "BlbkFJUyz8R6oyu2rZdQdlijow";
    const myApiKey = firstKey+"-"+secondKey+thirdKey;
    const openai = new OpenAI({apiKey:myApiKey,dangerouslyAllowBrowser: true });
    var finalPrompt = '';
    
    const handleSubmit = () => {
        prompt === "" ? finalPrompt = promptText : finalPrompt = prompt;
        additionalText === "" ? (finalPrompt=finalPrompt) : finalPrompt=(finalPrompt + " Match the style of the response based on my past messages: " + additionalText);
        chatResponse();
        console.log(finalPrompt);
    };

    const chatResponse = async () => {
        const completion = await openai.chat.completions.create({
            model: "gpt-3.5-turbo",
            messages: [{ role: "user", content: finalPrompt }],
            max_tokens: 100,
        });
        setResponse(completion.choices[0].message.content);
    };
        

//Finish chatgpt

    const handlePromptChange = (event) => {
        setPrompt(event.target.value);
    };

    const handleCheckboxChange = () => {
        setIncludeText(!includeText);
    };

    const handleAdditionalTextChange = (event) => {
        setAdditionalText(event.target.value);
    };

    
    const handleCopyResult = () => {
        navigator.clipboard.writeText(response);
    };

    const handleKeyDown = (event) => {
        if (event.key === 'Enter') {
          toggleOverlay();
        }
    };
    
    return (
        <div className="sliding-component" id='accent-outline'>
            <div className="content">
                <h2>Please fill in the gaps in the prompt below.
                    You can add examples of writing in your style below.
                    Full text of the prompt can be edited by you.
                    The response will be generated by ChatGPT 3.5.</h2>
                    <button onClick={toggleOverlay} tabIndex={0} onKeyDown={(event) => handleKeyDown(event)} id='accent' className='x-message'>&#x2715;</button>
                    <textarea
                        value={prompt === '' ? promptText : prompt}
                        onChange={handlePromptChange}
                        rows={6} 
                    cols={45}
                    id='accent'
                    />
                <div className="checkbox">
                    <input
                        type="checkbox"
                        checked={includeText}
                        onChange={handleCheckboxChange}
                    />
                    <p>Add context - paste example of writing in your style.</p>
                </div>
                {includeText && (
                    <textarea
                        value={additionalText}
                        onChange={handleAdditionalTextChange}
                        placeholder="Add example of your writing style."
                        rows={6} 
                        cols={45}
                        id='accent'
                    />
                )}
                <button className="submit" id='main-color-accent-outline' onClick={handleSubmit}>Submit</button>
                <div className="result">
                    <p>{response}</p>
                    {response && (
                        <button id='main-color-accent-outline' onClick={handleCopyResult} className='copy'>Copy Result</button>
                    )}
                </div>
            </div>
        </div>
    );
}

export default MessageGPT;
